version: 2.1
      
orbs:
  snyk: snyk/snyk@1.4.0

parameters:
  is_release:
    type: boolean
    default: false

references:
  python_images: &python_images
    - "cimg/python:3.9"
    - "cimg/python:3.10"
    - "cimg/python:3.11"
    - "cimg/python:3.12"
    - "cimg/python:3.13"
  default_image: &default_image cimg/python:3.13

jobs:
  main:
    parameters:
      image: 
        type: string
      circle_pr_number:
        type: string
        default: $CIRCLE_PR_NUMBER
    
    docker: 
      - image: <<parameters.image>>
    
    steps: 
      - checkout
      - run:
          name: update poetry
          command: poetry self update
      - run:
          name: install dependencies
          command: poetry install --no-ansi
      - unless:
          condition: << parameters.circle_pr_number >>
          steps:
            - snyk/scan
      - run:
          name: run tests
          command: poetry run pytest
      - run: 
          name: run flake8
          command: poetry run flake8

  package:
    docker:
      - image: *default_image
    steps:
      - checkout
      - run:
          name: Install Poetry
          command: |
            pip install poetry
            poetry --version
      - run:
          name: Build package
          command: poetry build
      - store_artifacts:
          path: dist/
          destination: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist/

  publish:
    docker:
      - image: *default_image
    steps:
      - when:
          condition: << pipeline.parameters.is_release >>
          steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: Install Poetry
                command: pip install poetry
            - run:
                name: Publish to PyPI
                command: |
                  poetry config pypi-token.pypi $PYPI_TOKEN
                  poetry publish
      - unless:
          condition: << pipeline.parameters.is_release >>
          steps:
            - run:
                name: Skip publishing
                command: echo "Not a release build, skipping publication"

workflows:
  build:
    jobs:
      - main:
          matrix:
            parameters:
              image: *python_images
      - package:
          requires:
            - main
      - publish:
          requires:
            - package
          filters:
            branches:
              only: master